A和B如何看到同一份匿名管道：通过继承
                                         命名管道：路径加命名

A和B如何看到同一个消息队列：通过Key值
A进程的Key值如何让B进程知道：A的Key值如何来的就让B如何得到Key值（采用同样的方法），两者之间不需要通信。AB之间必须有同一个Key值。

msgget获得
msgcrl删除
IPC就是进程间通信

·如果0-CREAT和0-EXCL同时打开被设置就会出错返回：会创建了一个全新的消息队列。
·只使用一个0-CREAT如果底层没有我就创建他，如果有的话我就打开他
只要一个比特位为1
返回值：消息队列的标识符（自己看到的，不是Key值）
#inculde<stdio.h>
#include<sys/types.h>
#include<sys/ipc.h>
#include<sys/msg.h>
 
Ipcs -q查看IPC消息队列
 
IPC的生命周期随内核，只能通过关机重启的方法去删除它
Ipcs ..删除（啥来着）

IPC-RMID立即删除这个消息队列
Msgctl(msgid,IPC-RMID,NULL)

共享内存是所有消息队列中速度最快的（没有互斥和同步的过程）

Shmget(创建)
Size的大小是页表的整数倍
系统把内存分为以按页为单位的区域，一页是4KB，换算成字节是1kb=1024字节，所以是1024×4=4096字节

Shmctl(删除)

Ipcs -m查看共享消息队列
Lpcs -l？？？
共享队列
第一步操作系统在物理地址开辟一个空间创建队列
第二步通过页表建立好映射关系
特点：共享队列的生命周期随内核 
优点：速度最快
缺点：本质上并没有经过内核，操作系统无法保证两个进程保证互斥与同步。
Shmat(挂接)

用户使用的地址是虚拟地址，映射关系是通过页表，核心代码是在修改页表。
